<?php

namespace DBundle\Repository;

/**
 * TacheRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TacheRepository extends \Doctrine\ORM\EntityRepository
{

    public function updateval($id)
    {
        $conn = $this->getEntityManager()
                     ->getConnection();
        //$sql="SELECT * FROM `Tache` ";
        $sql = "UPDATE `Tache` SET `status` = 'Traité' WHERE `id` = " . $id . " ";
        $stmt = $conn->prepare($sql);
        return $stmt->execute();
    }

    public function updatevalferme($id)
    {
        $conn = $this->getEntityManager()
            ->getConnection();
        //$sql="SELECT * FROM `Tache` ";
        $sql = "UPDATE `Tache` SET `status` = 'Fermé' WHERE id = " . $id . " ";
        $stmt = $conn->prepare($sql);

        return $stmt->execute();
    }

    public function getByNif($thisNif = null)
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('tache')
            ->from(Tache::class, 'tache');

        $queryBuilder->andWhere('tache.nif LIKE :thisNif')
            ->setParameter('thisNif', '%' . $thisNif . '%');


        $query = $queryBuilder->getQuery();

        return $query->getResult();
    }
    public function getByRsoc($thisRsoc = null)
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('tache')
            ->from(Tache::class, 'tache');

        $queryBuilder->andWhere('tache.raisonSocial LIKE :thisNif')
            ->setParameter('thisNif', '%' . $thisRsoc . '%');


        $query = $queryBuilder->getQuery();

        return $query->getResult();
    }

    public function toTruncate()
    {
        $conn = $this->getEntityManager()->getConnection();
            
        $sql = "SET FOREIGN_KEY_CHECKS = 0;
                TRUNCATE TABLE communication;
                TRUNCATE TABLE Tache;
                TRUNCATE TABLE TacheObservation;
                TRUNCATE TABLE Missions;
                TRUNCATE TABLE MissionObservation;
                TRUNCATE TABLE EntrantObservation;
                TRUNCATE TABLE courrier_dispatching;
                TRUNCATE TABLE service_entrant;
                TRUNCATE TABLE user_entrant;
                SET FOREIGN_KEY_CHECKS = 1;
                UPDATE `Entrant` SET `status` = 'Nouveau', `gestionnaire_id` = NULL ,`updated_at`= NULL, `delegation_date`= NULL, `traitement_date`= NULL, `attribution`= NULL, `service_id` = '2', `priority` = 'Normal' WHERE 'status' <> 'Nouveau' ;
                UPDATE `users` SET `nbrecourrier` = '0', `nbretache` = '0' WHERE users.enabled = '1' ;
                ";
        $stmt = $conn->prepare($sql);
        
        return $stmt->execute();
    }

}
